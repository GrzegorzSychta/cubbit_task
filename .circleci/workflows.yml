version: 2.1

parameters:
  environment:
    type: enum
    default: dev
    enum: [dev, stage, prod]

executors:
  go-docker-executor:
    docker:
      - image: cimg/go:1.22.7  # Use the appropriate Go version
    working_directory: ~/repo

jobs:
  build-and-push:
    parameters:
      environment:
        type: string
    executor: go-docker-executor
    steps:
      - checkout
      - run:
          name: Run Unit Tests
          command: |
            cd src/<<parameters.environment>>/go-hello-app
            go test -v
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Build and Push Docker Image
          command: |
            cd src/<<parameters.environment>>/go-hello-app
            TAG="grg1337/cubbit:go-hello-app-<<parameters.environment>>-$(date +%Y%m%d%H%M%S)"
            echo "export TAG=${TAG}" >> $BASH_ENV
            echo "Building Docker image with tag ${TAG}"
            docker build -t ${TAG} .
            echo "Docker build completed"
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            echo "Logged in to Docker Hub"
            echo "Pushing Docker image with tag ${TAG}"
            docker push ${TAG}
            echo "Docker push completed"
      - run:
          name: Configure Git
          command: |
            git config --global user.email "circleci@example.com"
            git config --global user.name "CircleCI"
            git config --global credential.helper 'store --file ~/.git-credentials'
            echo "https://x-access-token:${GIT_TOKEN}@github.com" > ~/.git-credentials
      - run:
          name: Update Helm Values File
          command: |
            sed -i "s|image: .*|image: ${TAG}|" helm-charts/go-hello-app/values/<<parameters.environment>>-values.yaml
            git add helm-charts/go-hello-app/values/<<parameters.environment>>-values.yaml
            git commit -m "Update image tag for <<parameters.environment>> environment to ${TAG} [skip ci]"
            git push origin main

workflows:
  build-and-deploy:
    jobs:
      - build-and-push:
          name: Build and Deploy to << pipeline.parameters.environment >>
          environment: << pipeline.parameters.environment >>
          filters:
            branches:
              only: main
